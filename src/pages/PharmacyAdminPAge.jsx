import React, { useEffect, useState } from 'react';
import api from '../api/axiosConfig';

const PharmacyAdminPage = () => {
  const [items, setItems] = useState([]);
  const [form, setForm] = useState({ name: '', quantity: '', price: '', description: '' });
  const [editingId, setEditingId] = useState(null);
  const [orders, setOrders] = useState([]);
  const [lowStock, setLowStock] = useState([]);

  const fetchAll = async () => {
    try {
      const [itemsRes, ordersRes, stockRes] = await Promise.all([
        api.get('/pharmacy'),
        api.get('/pharmacy/orders'),
        api.get('/pharmacy/low-stock')
      ]);
      setItems(itemsRes.data);
      setOrders(ordersRes.data);
      setLowStock(stockRes.data);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö:', error);
    }
  };

  useEffect(() => {
    fetchAll();
  }, []);

  const handleChange = (e) => {
    const { name, value } = e.target;
    setForm(prev => ({ ...prev, [name]: value }));
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    if (!form.name.trim() || !form.quantity || !form.price) {
      alert('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è: –Ω–∞–∑–≤–∞–Ω–∏–µ, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ, —Ü–µ–Ω–∞');
      return;
    }
    try {
      if (editingId) {
        await api.put(`/pharmacy/${editingId}`, {
          ...form,
          quantity: Number(form.quantity),
          price: Number(form.price)
        });
      } else {
        await api.post('/pharmacy', {
          ...form,
          quantity: Number(form.quantity),
          price: Number(form.price)
        });
      }
      setForm({ name: '', quantity: '', price: '', description: '' });
      setEditingId(null);
      fetchAll();
    } catch (err) {
      console.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è', err);
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö');
    }
  };

  const handleEdit = (item) => {
    setForm({
      name: item.name,
      quantity: item.quantity,
      price: item.price,
      description: item.description || ''
    });
    setEditingId(item.id);
    window.scrollTo({ top: 0, behavior: 'smooth' });
  };

  const handleDelete = async (id) => {
    if (!window.confirm('–£–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç —Ç–æ–≤–∞—Ä?')) return;
    try {
      await api.delete(`/pharmacy/${id}`);
      fetchAll();
    } catch (err) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏', err);
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞');
    }
  };

  return (
    <div className="max-w-4xl mx-auto p-6">
      <h2 className="text-3xl font-semibold mb-6 text-gray-800">–ê–¥–º–∏–Ω: –ê–ø—Ç–µ–∫–∞</h2>

      <form onSubmit={handleSubmit} className="bg-white p-6 rounded-lg shadow-md mb-10 space-y-4">
        <div>
          <label className="block mb-1 font-medium">–ù–∞–∑–≤–∞–Ω–∏–µ *</label>
          <input
            name="name"
            value={form.name}
            onChange={handleChange}
            className="w-full border border-gray-300 rounded px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500"
            placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ"
            required
          />
        </div>
        <div className="grid grid-cols-2 gap-4">
          <div>
            <label className="block mb-1 font-medium">–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ *</label>
            <input
              name="quantity"
              type="number"
              min="0"
              value={form.quantity}
              onChange={handleChange}
              className="w-full border border-gray-300 rounded px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500"
              placeholder="–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ"
              required
            />
          </div>
          <div>
            <label className="block mb-1 font-medium">–¶–µ–Ω–∞ (‚Ç¨) *</label>
            <input
              name="price"
              type="number"
              step="0.01"
              min="0"
              value={form.price}
              onChange={handleChange}
              className="w-full border border-gray-300 rounded px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500"
              placeholder="–í–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É"
              required
            />
          </div>
        </div>
        <div>
          <label className="block mb-1 font-medium">–û–ø–∏—Å–∞–Ω–∏–µ</label>
          <textarea
            name="description"
            value={form.description}
            onChange={handleChange}
            className="w-full border border-gray-300 rounded px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500"
            placeholder="–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)"
            rows={3}
          />
        </div>
        <button
          type="submit"
          className="bg-green-600 hover:bg-green-700 text-white px-6 py-2 rounded font-semibold transition"
        >
          {editingId ? '–û–±–Ω–æ–≤–∏—Ç—å' : '–î–æ–±–∞–≤–∏—Ç—å'}
        </button>
      </form>

      <section className="mb-10">
        <h3 className="text-2xl font-semibold mb-4">–°–ø–∏—Å–æ–∫ –ª–µ–∫–∞—Ä—Å—Ç–≤</h3>
        {items.length === 0 ? (
          <p>–°–ø–∏—Å–æ–∫ –ø—É—Å—Ç</p>
        ) : (
          <ul className="space-y-4">
            {items.map(item => (
              <li key={item.id} className="bg-white rounded shadow p-4 flex flex-col sm:flex-row sm:justify-between sm:items-center">
                <div>
                  <h4 className="text-lg font-semibold">{item.name}</h4>
                  <p className="text-gray-600">{item.description || '–ë–µ–∑ –æ–ø–∏—Å–∞–Ω–∏—è'}</p>
                  <p className="mt-1 font-medium">
                    –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: <span className="text-blue-700">{item.quantity}</span> —à—Ç
                    {' | '}
                    –¶–µ–Ω–∞: <span className="text-blue-700">{item.price} ‚Ç¨</span>
                  </p>
                </div>
                <div className="mt-4 sm:mt-0 flex space-x-3">
                  <button
                    onClick={() => handleEdit(item)}
                    className="bg-yellow-500 hover:bg-yellow-600 text-white rounded px-4 py-1 transition"
                  >
                    –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
                  </button>
                  <button
                    onClick={() => handleDelete(item.id)}
                    className="bg-red-600 hover:bg-red-700 text-white rounded px-4 py-1 transition"
                  >
                    –£–¥–∞–ª–∏—Ç—å
                  </button>
                </div>
              </li>
            ))}
          </ul>
        )}
      </section>

      <section className="mb-10">
        <h3 className="text-2xl font-semibold mb-4 text-red-600">–ù–∏–∑–∫–∏–π –æ—Å—Ç–∞—Ç–æ–∫ (–º–µ–Ω—å—à–µ 5)</h3>
        {lowStock.length === 0 ? (
          <p>–ù–∏–∑–∫–∏—Ö –æ—Å—Ç–∞—Ç–∫–æ–≤ –Ω–µ—Ç</p>
        ) : (
          <ul className="space-y-2 list-disc list-inside text-red-600">
            {lowStock.map(item => (
              <li key={item.id}>
                ‚ö†Ô∏è <strong>{item.name}</strong> ‚Äì –æ—Å—Ç–∞–ª–æ—Å—å <span className="font-semibold">{item.quantity}</span> —à—Ç
              </li>
            ))}
          </ul>
        )}
      </section>

      <section>
        <h3 className="text-2xl font-semibold mb-4">–í—Å–µ –∑–∞–∫–∞–∑—ã</h3>
        {orders.length === 0 ? (
          <p>–ó–∞–∫–∞–∑—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç</p>
        ) : (
          <ul className="space-y-3">
            {orders.map(order => (
              <li key={order.id} className="border rounded p-3 bg-white shadow-sm flex justify-between items-center">
                <div>
                  üßæ <strong>{order.item.name}</strong> ‚Äî {order.quantity} —à—Ç ‚Äî <span className="capitalize">{order.action.toLowerCase()}</span>
                </div>
                <div className="text-gray-600 italic">üë§ {order.client.username}</div>
              </li>
            ))}
          </ul>
        )}
      </section>
    </div>
  );
};

export default PharmacyAdminPage;
